// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(cuid()) // Clerk ID
  name           String
  email          String   @unique
  imageUrl       String?

  role           Role     @default(STUDENT)

  // Previously in UserDetails
  instituteMail  String?  @unique
  college        String   @default("")
  semester       Int      @default(0)
  interestFields String[] @default([])

  // ðŸ”— Relations
  studentProjects Project[] @relation("StudentProjects")
  guideProjects    Project[] @relation("GuideProjects")
   blogs           Blog[]

  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}


enum Role {
  STUDENT
  GUIDE
}

model Project {
  id        String   @id @default(cuid())
  student   User     @relation("StudentProjects", fields: [studentId], references: [id])
  studentId String

  guide     User     @relation("GuideProjects", fields: [guideId], references: [id])
  guideId   String

  versions  ProjectVersion[]  // Relation to versions

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProjectVersion {
  id          String   @id @default(cuid())
  project     Project  @relation(fields: [projectId], references: [id])
  projectId   String

  name        String
  fileUrl     String?   // uploaded PDF
  link        String?   // GitHub or deployed
  status      Status    @default(PENDING)
  modification String?  // guide notes

  createdAt   DateTime  @default(now())
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}

model Blog {
  id        String   @id @default(cuid())
  guideId   String
  guide     User     @relation(fields: [guideId], references: [id])

  title     String   // Add a title to give structure to the blog
  content   String   // Main blog content

  createdAt DateTime @default(now())

}

